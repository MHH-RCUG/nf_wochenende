// nf_wochenende nextflow configuration file
//configure these values to your own cluster queues and type, or just use local for the current machine

executor {
  name = 'lsf'
  //name = 'local'
  perJobMemLimit = true
  queue = 'bioinformatics'
  memory = '40 GB'
  cpus = 16

}

params {

  // Runtime parameters
  // Commonly changed parameters can be set here instead of using the start_nf.sh bash script

  //ref = "/mnt/beegfs/scratch/bioinformatics/colin/dev/nf_wochenende/current/nf_wochenende/test/data/ref.fa"
  ref = "/mnt/beegfs/scratch/bioinformatics/colin/seqres/metagenref/wochenende/2021_12_human_bact_arch_fungi_vir.fa"
  aligner = "minimap2long"    // Aligner software to use (bwamem, minimap2short, minimap2long, ngmlr)
  mismatches = "250"          // Exclude reads with x of more mismatches. Suggest 3 for short reads, 100+ for long reads (integer)
  readType = "SE"             // SE single ended or PE paired end (SE, PE)
  mapping_quality = "MQ30"    // Mapping quality filter. (MQ20, MQ30)
  longread = true             // Are reads from ONT or Pacbio. Recommend minimap2long aligner. (true, false)
  no_dup_removal = false      // Do not remove duplicate reads
  nextera = false             // Use illumina nextera adapter trimming (true, false)
  abra = false                // Use abra2 read realignment (true, false)
  no_prinseq = true           // Filter reads using prinseq (only for short reads) (true, false)
  no_fastqc = true            // Do not run fastqc (true, false)
  fastp = false               // Use fastp trimming tool (short reads) (true, false)
  trim_galore = false         // Use trim_galore trimmer (short reads) (true, false)
  


# All options
# --threads 12
#--longread (implies aligner is not bwa-mem, no prinseq, no duplicate removal)
#--aligner bwamem
#--aligner minimap2short   (for Illumina reads)
#--aligner minimap2long    (for nanopore reads)
#--aligner ngmlr
#--nextera  - remove Nextera adapters with Trimmomatic, not default Ultra II / Truseq adapters
#--no_abra  - no read realignment
#--mq20     - remove reads with a mapping quality of less than 20. Less stringent than MQ30, required for raspir https://github.com/mmpust/raspir
#--mq30     - remove reads with a mapping quality of less than 30
#--readType SE - single ended reads
#--readType PE - paired end reads
#--debug
#--force_restart
#--remove_mismatching 3 (remove those reads with 3 or more mismatches) # questionable for very long reads
#--remove_mismatching 250 (remove those reads with 250 or more mismatches) # for long reads set to ~10% of median read length.
#--no_duplicate_removal  - do not remove duplicate reads
#--no_prinseq   - do not filter out low complexity initial reads using prinseq (default in this file after 2020_11)
#--no_fastqc
#--testWochenende - runs the test scripts with test reads vs a testDB and checks if all seems well.
#--fastp - fastp is recommended as an alternative trimmer to Trimmomatic if you are having adapter problems
#--trim_galore - trim_galore is the best adapter trimmer for nextera reads


  // set these to your local nf_Wochenende or haybaler paths (which you cloned from github)
  WOCHENENDE_DIR="/mnt/beegfs/scratch/bioinformatics/colin/dev/nf_wochenende/current/nf_wochenende"
  HAYBALER_DIR="/mnt/beegfs/scratch/bioinformatics/colin/dev/haybaler"

  // set these paths to the conda or haybaler conda environments you installed
  conda_wochenende="/home/hpc/davenpor/programs/miniconda3/envs/wochenende/"
  conda_haybaler="/home/hpc/davenpor/programs/miniconda3/envs/haybaler/"

  // Haybaler lower thresholds below which taxa are excluded: 
  // 1. Minimum readcounts per sample. Chromosomes with less than x reads in every sample are filtered out! Default = 10
  // 2. Minimum RPMM per sample. Chromosomes with less than x RPMM in every sample are filtered out. Default = 300
  // Recommended settings_
  //haybaler_readcount_limit = 10
  //haybaler_rpmm_limit = 300
  // haybaler for tiny developer fastq datasets
  haybaler_readcount_limit = 1
  haybaler_rpmm_limit = 10

}

process {

// configure this to an R server
  withName: 'run_r' {
    memory = '40 GB'
    cpus = 1
    queue = ''
    clusterOptions = "- your_r_server"
  }
}

